jobs = [{
    "Install NuGet": "$ProgressPreference='SilentlyContinue'; Install-PackageProvider -Name NuGet -Force -Scope CurrentUser -ForceBootstrap -ErrorAction SilentlyContinue",
    "Install Chocolatey": "if (-not (Get-Command choco -ErrorAction SilentlyContinue)) { [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) }",
    "Install Windows Updates": "if (-not (Get-Module -ListAvailable -Name PSWindowsUpdate)) { Install-Module -Name PSWindowsUpdate -Force -Confirm:$false }; Import-Module PSWindowsUpdate; $svc = Get-Service -Name wuauserv -ErrorAction SilentlyContinue; if ($svc) { if ($svc.StartType -eq 'Disabled') { Set-Service wuauserv -StartupType Manual }; if ($svc.Status -ne 'Running') { Start-Service wuauserv }; Install-WindowsUpdate -AcceptAll -AutoReboot }",
    "Create System Restore Point": "if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")) { exit }; foreach ($s in \"VSS\",\"srservice\") { $svc=Get-Service $s -ErrorAction SilentlyContinue; if ($svc) { if ($svc.StartType -eq \"Disabled\") { Set-Service $s -StartupType Manual }; if ($svc.Status -ne \"Running\") { Start-Service $s } } }; Enable-ComputerRestore -Drive \"C:\" -ErrorAction SilentlyContinue; & vssadmin Resize ShadowStorage /For=C: /On=C: /MaxSize=10GB | Out-Null; New-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" -Name \"SystemRestorePointCreationFrequency\" -Value 0 -PropertyType DWord -Force | Out-Null; Checkpoint-Computer -Description (\"OptiX \" + (Get-Date -Format 'yyyy-MM-dd_HH-mm')) -RestorePointType \"MODIFY_SETTINGS\"",
    "Disable Telemetry": "try { New-Item -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\" -Name \"DataCollection\" -Force | Out-Null; Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\DataCollection\" -Name \"AllowTelemetry\" -Value 0 -Type DWord; Stop-Service -Name \"DiagTrack\" -ErrorAction SilentlyContinue; if (Get-Service -Name \"dmwappushsvc\" -ErrorAction SilentlyContinue) { Stop-Service -Name \"dmwappushsvc\" -ErrorAction SilentlyContinue; Set-Service -Name \"dmwappushsvc\" -StartupType Disabled } } catch {}",
    "Disable Background Apps": "New-Item -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\BackgroundAccessApplications' -Force | Out-Null; Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\BackgroundAccessApplications' -Name 'GlobalUserDisabled' -Value 1 -Type DWord",
    "Disable Unnecessary Services": "$servicesToDisable = @('SysMain','WMPNetworkSvc','WSearch','XblGameSave','WbioSrvc','MapsBroker','PcaSvc','lfsvc'); foreach ($service in $servicesToDisable) { $svc = Get-Service -Name $service -ErrorAction SilentlyContinue; if ($svc) { Stop-Service -Name $service -ErrorAction SilentlyContinue; Set-Service -Name $service -StartupType Disabled } }",
    "Disable Visual Effects": "New-Item -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VisualEffects' -Force | Out-Null; Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VisualEffects' -Name 'VisualFXSetting' -Value 2 -Type DWord; Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VisualEffects' -Name 'UserPreferencesMask' -Value ([byte[]](144,1,0,0,0,0,0,0)) -Type Binary",
    "Disable Mouse Acceleration": "Set-ItemProperty -Path 'HKCU:\\Control Panel\\Mouse' -Name 'MouseSpeed' -Value 0; Set-ItemProperty -Path 'HKCU:\\Control Panel\\Mouse' -Name 'MouseThreshold1' -Value 0; Set-ItemProperty -Path 'HKCU:\\Control Panel\\Mouse' -Name 'MouseThreshold2' -Value 0",
    "Disable Activity History": "if (Test-Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Diagnostics\\ActivityFeed\\Publishers') { Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Diagnostics\\ActivityFeed\\Publishers' -Name 'UserEnabled' -Value 0 }",
    "Disable GameDVR": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\GameDVR' -Name 'AppCaptureEnabled' -Value 0; Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\GameDVR' -Name 'GameDVR_Enabled' -Value 0; Set-ItemProperty -Path 'HKCU:\\System\\GameConfigStore' -Name 'GameDVR_Enabled' -Value 0",
    "Disable Location Tracking": "if (Test-Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location') { Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location' -Name 'Value' -Value 'Deny' }",
    "Disable WPBT": "if (Test-Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\WPBT') { Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\WPBT' -Name 'DisableWPBT' -Value 1 -Type DWord }",
    "Disable Widgets": "New-Item -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Feeds' -Force | Out-Null; Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Feeds' -Name 'EnableFeeds' -Value 0 -Type DWord -Force; Stop-Process -Name explorer -Force; Start-Process explorer.exe",
    "Disable Trasparency": "Set-ItemProperty -Path HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize -Name EnableTransparency -Value 0",
    "Disable Cortana": "if (Test-Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search') { Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search' -Name 'AllowCortana' -Value 0 -Type DWord }",
    "Disable Windows Suggestions": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager' -Name 'SystemPaneSuggestionsEnabled' -Value 0",
    "Disable Cloud Sync": "if (Test-Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\SyncSettings') { Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\SyncSettings' -Name 'SyncPolicy' -Value 0 }",
    "Disable Background": "Add-Type -TypeDefinition 'using System; using System.Runtime.InteropServices; public class Wallpaper { [DllImport(\"user32.dll\",SetLastError=true)] public static extern bool SystemParametersInfo(int uAction,int uParam,string lpvParam,int fuWinIni); }'; Set-ItemProperty -Path 'HKCU:\\Control Panel\\Colors' -Name 'Background' -Value '0 0 0'; [Wallpaper]::SystemParametersInfo(20,0,'',3)",
    "Disable Task View": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'ShowTaskViewButton' -Value 0 -Type DWord; Stop-Process -Name explorer -Force",
    "Disable Start Menu Recommendations": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'Start_Ads' -Value 0 -Type DWord",
    "Disable Indexing": "Set-Service -Name 'WSearch' -StartupType Disabled; Stop-Service -Name 'WSearch'",
    "Disable Bing Results in Search": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Search' -Name 'BingSearchEnabled' -Value 0 -Type DWord; Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Search' -Name 'CortanaConsent' -Value 0 -Type DWord",
    "Enable Dark Mode": "Set-ItemProperty -Path 'HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize' -Name 'AppsUseLightTheme' -Value 0",
    "Enable Verbose": "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System' -Name 'VerboseStatus' -Value 1 -Type DWord",
    "Hide Search Box": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Search' -Name 'SearchboxTaskbarMode' -Value 0 -Type DWord",
    "Show Seconds on Taskbar": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'ShowSecondsInSystemClock' -Value 1 -Type DWord; Stop-Process -Name 'explorer' -Force",
    "Show File Extensions": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'HideFileExt' -Value 0",
    "Show Hidden Files": "Set-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced' -Name 'Hidden' -Value 1",
    "Uninstall Bloatware": "$bloatwarePackages=@('Microsoft.OneDrive','Microsoft.3DBuilder','Microsoft.BingFinance','Microsoft.BingNews','Microsoft.BingSports','Microsoft.BingWeather','Microsoft.GetHelp','Microsoft.Getstarted','Microsoft.Microsoft3DViewer','Microsoft.MicrosoftOfficeHub','Microsoft.MicrosoftSolitaireCollection','Microsoft.MSPaint','Microsoft.Office.OneNote','Microsoft.People','Microsoft.Windows.PeopleExperienceHost','Microsoft.SkypeApp','Microsoft.Windows.Alarms','microsoft.windowscommunicationsapps','Microsoft.WindowsFeedbackHub','Microsoft.WindowsMaps','Microsoft.WindowsSoundRecorder','Microsoft.XboxApp','Microsoft.Xbox.TCUI','Microsoft.XboxGameOverlay','Microsoft.XboxGamingOverlay','Microsoft.XboxSpeechToTextOverlay','Microsoft.XboxIdentityProvider','Microsoft.ZuneMusic','Microsoft.ZuneVideo','Microsoft.MixedReality.Portal','Microsoft.YourPhone','Microsoft.Wallet','Microsoft.MicrosoftStickyNotes','Microsoft.ScreenSketch','Microsoft.StorePurchaseApp','Microsoft.Services.Store.Engagement','Microsoft.Windows.Photos','Microsoft.DesktopAppInstaller','Microsoft.Edge','Microsoft.Camera','Microsoft.Calculator','Microsoft.RadeonSettings');foreach($pkg in $bloatwarePackages){Get-AppxPackage -Name $pkg -AllUsers|Remove-AppxPackage -ErrorAction SilentlyContinue;Get-AppxProvisionedPackage -Online|Where-Object{$_.DisplayName -eq $pkg}|Remove-AppxProvisionedPackage -Online -ErrorAction SilentlyContinue}",
    "Apply Custom Powerplan": "$path=\"$env:TEMP\\plan.pow\"; Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/evvskx/OptiX/refs/heads/assets/OptiX.pow' -OutFile $path -UseBasicParsing; $guid=(powercfg -import $path | ForEach-Object { ($_ -match 'GUID:\\s+([a-f0-9-]+)') | Out-Null; $matches[1] }); powercfg -setactive $guid",
    "Run OOSU10": "$tempDir=[System.IO.Path]::GetTempPath();$configUrl=\"https://raw.githubusercontent.com/evvskx/OptiX/refs/heads/assets/ooshutup10.cfg\";$oosuUrl=\"https://dl5.oo-software.com/files/ooshutup10/OOSU10.exe\";$config=Join-Path $tempDir \"ooshutup10.cfg\";$oosu=Join-Path $tempDir \"OOSU10.exe\";Invoke-WebRequest -Uri $configUrl -OutFile $config;Invoke-WebRequest -Uri $oosuUrl -OutFile $oosu;Start-Process -FilePath $oosu -ArgumentList \"$config /quiet /norsp\"",
    "Clearing Temp": "Get-ChildItem -Path $env:TEMP -Force | Where-Object { $_.Name -ne \"OptiX\" -and $_.Name -notlike \"_MEI*\" } | ForEach-Object { try { Remove-Item $_.FullName -Recurse -Force -ErrorAction Stop } catch { } }",
}]
